name: Deploy PHP Application
on:
  push:
    branches:
      - develop
      - master
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Determine environment
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]] || [[ "${{ github.event.inputs.environment }}" == "production" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "üè≠ Deploying to PRODUCTION"
          else
            echo "environment=development" >> $GITHUB_OUTPUT
            echo "üîß Deploying to DEVELOPMENT"
          fi

      - name: Generate config.php
        run: |
          if [[ "${{ steps.env.outputs.environment }}" == "production" ]]; then
            # Configuraci√≥n de producci√≥n
            cat > auditoria/config.php <<- 'EOF'
            <?php
            // CONFIGURACI√ìN DE PRODUCCI√ìN
            $HOSTNAME = "${{ secrets.PROD_DB_HOST }}";
            $USERNAME = "${{ secrets.PROD_DB_USER }}";
            $PASSWORD = "${{ secrets.PROD_DB_PASS }}";
            $DATABASE = "${{ secrets.PROD_DB_NAME }}";
            $CFG_SUBCARPETA = "images";
            ?>
          EOF
          else
            # Configuraci√≥n de desarrollo
            cat > auditoria/config.php <<- 'EOF'
            <?php
            // CONFIGURACI√ìN DE DESARROLLO
            $HOSTNAME = "${{ secrets.DEV_DB_HOST }}";
            $USERNAME = "${{ secrets.DEV_DB_USER }}";
            $PASSWORD = "${{ secrets.DEV_DB_PASS }}";
            $DATABASE = "${{ secrets.DEV_DB_NAME }}";
            $CFG_SUBCARPETA = "images";
            ?>
          EOF
          fi

      - name: Validate PHP syntax
        run: |
          find . -name "*.php" -exec php -l {} \; > /dev/null
          echo "‚úÖ PHP syntax validation passed"
          echo "‚úÖ FTP Secrets ${{ secrets.DEV_FTP_HOST }}  ${{ secrets.PROD_FTP_HOST }}"

      - name: Verify Secrets
        run: |
          if [ -n "${{ secrets.DEV_FTP_HOST }}" ]; then
            echo "‚úÖ DEV_FTP_HOST secret is loaded. -> ${{ secrets.PROD_FTP_HOST }}"
          else
            echo "‚ùå DEV_FTP_HOST secret is MISSING."
          fi

          if [ -n "${{ secrets.PROD_FTP_HOST }}" ]; then
            echo "‚úÖ PROD_FTP_HOST secret is loaded. -> ${{ secrets.PROD_FTP_HOST }}"
          else
            echo "‚ùå PROD_FTP_HOST secret is MISSING."
          fi

      - name: Deploy to Development Server
        if: steps.env.outputs.environment == 'development'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.DEV_FTP_HOST }}
          username: ${{ secrets.DEV_FTP_USER }}
          password: ${{ secrets.DEV_FTP_PASS }}
          local-dir: ./
          server-dir: ${{ secrets.DEV_FTP_PATH }}
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.env*
            **/tests/**
            **/.github/**
            **/README.md

      - name: Deploy to Production Server
        if: steps.env.outputs.environment == 'production'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.PROD_FTP_HOST }}
          username: ${{ secrets.PROD_FTP_USER }}
          password: ${{ secrets.PROD_FTP_PASS }}
          local-dir: ./
          server-dir: ${{ secrets.PROD_FTP_PATH }}
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.env*
            **/tests/**
            **/.github/**
            **/README.md

      - name: Deployment Summary
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "Environment: ${{ steps.env.outputs.environment }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
